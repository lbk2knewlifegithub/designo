# Deploy to STAGING environment use namespace lemon-lbk2knewlifegithub
deploy:
  - okteto ns use lemon-lbk2knewlifegithub && okteto kubeconfig
  - envsubst < config-template.yaml > config.yaml
  - kubectl apply -f config.yaml -n lemon-lbk2knewlifegithub

  # Setup redis STAGING
  - helm repo add bitnami https://charts.bitnami.com/bitnami
  - helm upgrade -i redis-staging -n lemon-lbk2knewlifegithub -f values/staging/redis.yaml bitnami/redis

  # Setup ysql STAGING
  - helm repo add yugabytedb https://charts.yugabyte.com
  - helm upgrade --install ysql-staging -n lemon-lbk2knewlifegithub -f values/staging/ysql.yaml yugabytedb/yugabyte

  # Build api auth STAGING
  - okteto build -t okteto.dev/api-auth:${OKTETO_GIT_COMMIT} api -f api/auth.Dockerfile
  - helm upgrade -i api-auth charts/api -n lemon-lbk2knewlifegithub -f values/staging/api-auth.yaml --set tag=${OKTETO_GIT_COMMIT}

  # Build api product feedbacks STAGING
  - okteto build -t okteto.dev/api-product-feedbacks:${OKTETO_GIT_COMMIT} api -f api/product-feedbacks.Dockerfile
  - helm upgrade -i api-product-feedbacks charts/api -n lemon-lbk2knewlifegithub -f values/staging/api-product-feedbacks.yaml --set tag=${OKTETO_GIT_COMMIT}

  # Build api images STAGING
  - okteto build -t okteto.dev/api-images:${OKTETO_GIT_COMMIT} api -f api/images.Dockerfile
  - helm upgrade -i api-images charts/api-storage -n lemon-lbk2knewlifegithub -f values/staging/api-images.yaml --set tag=${OKTETO_GIT_COMMIT}

  # Build Client Product Feedbacks STAGING
  - okteto build -t okteto.dev/client-product-feedbacks:${OKTETO_GIT_COMMIT} client -f client/product-feedbacks-staging.Dockerfile
  - helm upgrade -i client-product-feedbacks charts/client -n lemon-lbk2knewlifegithub -f values/client-product-feedbacks.yaml --set tag=${OKTETO_GIT_COMMIT}

  # Apply ingress
  - kubectl apply -f ingress/api-staging.yaml
